.TH _PRINTF "31 August 2018" "1.0" "holberton man page"
.SH NAME
.B _PRINTF
- formatted output conversion
.SH SYNOPSIS
.B #include "holberton.h"
.sp
.B "int _printf(const char
.BI *format
.B , ...);"
.ad
.SH DESCRIPTION

.SS Synopsis
The _printf function is a simplified version of printf. It formats and prints data of specific format specifiers.

.SS Return value
Upon successful return, these functions return the number of characters printed 
(excluding the null byte used to end output to strings).

.SS Format of the format string
The format string is a character string, beginning and ending in its initial shift state, if any. 
The format string is composed of zero or more directives: ordinary characters (not 
.BR %
), which are copied unchanged to the output stream; and conversion specifications, 
each of which results in fetching zero or more subsequent arguments. 
Each conversion specification is introduced by the character 
.BR %
, and ends with a 
.IR conversion specifier. 

.SS The conversion specifier
A character that specifies the type of conversion to be applied. 
The conversion specifiers and their meanings are:

.B d, i

The
.I int 
argument is converted to signed decimal notation.
The precision, if any, gives the minimum number of digits that must appear;
if the converted value requires fewer digits, it is padded on the left with zeros.
The default precision is 1. When 0 is printed with an explicit precision 0, the output is empty.

.B c
A char argument with the resulting character being written. 

.B s
A string of chars. The 
.I const char *
argument is expected to be a pointer to an array of character type (pointer to a string).
Characters from the array are written up to the end of the length excluding the null byte '\0'.


.SH EXAMPLE
To print
.I "helloworld1"
#include "holberton.h"
int variable = 1;
printf("helloworld%i", variable)

.SH SEE ALSO
.I printf(3)

.SH BUGS
No known bugs.

.SH AUTHOR
Rui Feng && Dennis Pham
