.TH _PRINTF "31 August 2018" "1.0" "holberton man page"
.SH NAME
.B _PRINTF
- formatted output conversion
.SH SYNOPSIS
.B #include "holberton.h"
.br
.B int _printf(const char
*format\fB, ...);\fR

.SH DESCRIPTION

.SS Synopsis
The _printf function is a simplified version of printf. It formats and prints data to the standard output.

.SS Return value
Upon successful return, the fuction returns the number of characters printed, except for the null byte character.

.SS Format of the format string
The format string is a character string, beginning and ending in its initial shift state, if any.
The format string is composed of zero or more directives: ordinary characters (not \fB%\fR), which are copied unchanged to the output stream; and conversion specifications,
each of which results in fetching zero or more subsequent arguments.
Each conversion specification is introduced by the character \fB%\fR, and ends with a
.IR "conversion specifier" .

.SS The conversion specifier
A character that specifies the type of conversion to be applied.
The conversion specifiers and their meanings are:

.B d, i

The
.I int
argument is converted to signed decimal notation. Prints an integer in base 10.

.B c

A
.I char
argument with the resulting character being written. Prints a single character.

.B s

Prints a string of characters. The
.I const char *
argument is expected to be a pointer to an array of character type (pointer to a string).
Characters from the array are written up to the end of the length excluding the null byte '\0'.


.SH EXAMPLE
To print:
.br
.TP
.I "helloworld1"
#include "holberton.h"
.br
int variable = 1;
.br
_printf("helloworld%i", variable)

.SH SEE ALSO
.I printf(3)

.SH BUGS
No known bugs.

.SH AUTHOR
Rui Feng && Dennis Pham
